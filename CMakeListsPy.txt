cmake_minimum_required(VERSION 3.14)
project(FlexibleNN LANGUAGES CXX)

#set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_FLAGS "-O0 -ltbb -lpthread" )

#add_executable(FlexibleNN src/utils.cpp include/utils.h include/neural_networks/utils.h src/neural_network/utils.cpp include/neural_networks/synapse.h   src/neural_network/synapse.cpp include/neural_networks/neuron.h src/neural_network/neuron.cpp  include/neural_networks/neural_network.h src/neural_network/neural_network.cpp include/experiment/Experiment.h src/experiment/Experiment.cpp include/experiment/Database.h src/experiment/Database.cpp include/experiment/Metric.h src/experiment/Metric.cpp include/neural_networks/message.h src/neural_network/message.cpp include/neural_networks/networks/test_network.h src/neural_network/networks/test_network.cpp run_tmaze.cu include/neural_networks/networks/test.h src/neural_network/networks/test.cpp src/hybrid_code/queue.cu include/animal_learning/tracecondioning.h src/animal_learning/traceconditioning.cpp include/neural_networks/networks/simple_network.h src/neural_network/networks/simple_network.cpp src/environments/tmaze.cpp include/environments/tmaze.h)
set(CMAKE_CXX_STANDARD 20)

#GCloud
#set(CMAKE_CXX_FLAGS "-O3 -lpthread -ldl -lm -I/home/khurramjaved/mariadb/mariadb-connector-c-3.1.13-ubuntu-focal-amd64/include/mariadb -I/home/khurramjaved/mariadb/mariadb-connector-c-3.1.13-ubuntu-focal-amd64/include/mariadb/mysql -L/home/khurramjaved/mariadb/mariadb-connector-c-3.1.13-ubuntu-focal-amd64/lib/mariadb/")

#Cedar
set(CMAKE_CXX_FLAGS "-O3 -ltbb -lpthread")
#set(CMAKE_CXX_FLAGS "-O3 -ltbb -lpthread -fPIC -I/usr/include/python3.9 -I/home/haseebs/workspace/envs/animal/lib/python3.9/site-packages/pybind11/include")

find_package(Python COMPONENTS Interpreter Development REQUIRED)
find_package(pybind11 REQUIRED)
include_directories("/home/haseebs/workspace/envs/animal/include/pybind11")
include_directories("/usr/include/python3.9")

#old tmaze
#add_executable(FlexibleNN simple_exp.cpp src/utils.cpp include/utils.h include/neural_networks/synapse.h src/neural_network/synapse.cpp include/neural_networks/neuron.h src/neural_network/neuron.cpp include/neural_networks/neural_network.h src/neural_network/neural_network.cpp include/experiment/Experiment.h src/experiment/Experiment.cpp include/experiment/Database.h src/experiment/Database.cpp include/experiment/Metric.h src/experiment/Metric.cpp  include/neural_networks/utils.h src/neural_network/utils.cpp include/neural_networks/message.h src/neural_network/message.cpp include/neural_networks/networks/adaptive_network.h src/neural_network/networks/adaptive_network.cpp run_tmaze.cpp src/environments/tmaze.cpp include/environments/tmaze.h)

#working tmaze
#add_executable(FlexibleNN src/utils.cpp include/utils.h include/neural_networks/synapse.h src/neural_network/synapse.cpp include/neural_networks/neuron.h src/neural_network/neuron.cpp include/neural_networks/neural_network.h include/experiment/Experiment.h src/experiment/Experiment.cpp include/experiment/Database.h src/experiment/Database.cpp include/experiment/Metric.h src/experiment/Metric.cpp  include/neural_networks/utils.h src/neural_network/utils.cpp include/neural_networks/message.h src/neural_network/message.cpp include/neural_networks/networks/adaptive_network.h src/neural_network/networks/adaptive_network.cpp include/neural_networks/dynamic_elem.h src/neural_network/dynamic_elem.cpp src/environments/tmaze.cpp include/environments/tmaze.h run_tmaze.cpp)

#pybind11_add_module(FlexibleNN src/utils.cpp include/utils.h include/neural_networks/synapse.h src/neural_network/synapse.cpp include/neural_networks/neuron.h src/neural_network/neuron.cpp include/neural_networks/neural_network.h include/experiment/Experiment.h src/experiment/Experiment.cpp include/experiment/Database.h src/experiment/Database.cpp include/experiment/Metric.h src/experiment/Metric.cpp  include/neural_networks/utils.h src/neural_network/utils.cpp include/neural_networks/message.h src/neural_network/message.cpp include/neural_networks/networks/adaptive_network.h src/neural_network/networks/adaptive_network.cpp include/neural_networks/dynamic_elem.h src/neural_network/dynamic_elem.cpp src/environments/tmaze.cpp include/environments/tmaze.h pybind_interface/adaptive_network_int.cpp)
pybind11_add_module(FlexibleNN src/utils.cpp include/utils.h include/nn/synapse.h src/nn/synapse.cpp include/nn/neuron.h src/nn/neuron.cpp include/nn/neural_network.h include/experiment/Experiment.h src/experiment/Experiment.cpp include/experiment/Database.h src/experiment/Database.cpp include/experiment/Metric.h src/experiment/Metric.cpp include/nn/utils.h src/nn/utils.cpp include/nn/message.h src/nn/message.cpp include/nn/networks/feedforward_state_value_network.h src/nn/networks/feedforward_state_value_network.cpp include/environments/animal_learning/tracecondioning.h src/environments/animal_learning/traceconditioning.cpp tests/include/fixed_feedforward_network.h tests/src/network_implementations.cpp src/environments/animal_learning/tracepatterning.cpp include/nn/dynamic_elem.h src/nn/dynamic_elem.cpp include/nn/networks/recurrent_state_value_network.h src/nn/networks/adaptive_recurrent_networks.cpp tests/include/fixed_recurrent_network.h include/nn/networks/network.h src/nn/networks/network.cpp tests/include/feedforward_gradient_testcase.h pybind_interface/network_interface.cpp)

#Cedar
target_link_libraries(FlexibleNN PRIVATE mariadb)

#GCloud
#target_link_libraries(FlexibleNN PUBLIC tbb)
#target_link_libraries(FlexibleNN PUBLIC mariadb)

project(FlexibleNN LANGUAGES CXX)

